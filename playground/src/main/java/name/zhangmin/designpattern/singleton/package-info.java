/**
 * 创建型模式的一种，提供创建对象的一种最佳方式，保证有且只有一个对象被创建。
 * 并且提供唯一的访问对象的方式，直接访问，而不需要实例化该对象。
 * <p/>
 * 意图：保证一个类只有一个实例，并且提供一个访问该实例的一个唯一的全局访问点。
 * <p/>
 * 适用场景：1）频繁创建和销毁实例，且实例对象可以复用；2）需要控制实例对象的数量。
 * <p/>
 * 关键代码实现：1）构造函数私有；2）判断是否实例对象已经初始化，如果是则直接返回。
 * <p/>
 * 优点：1）内存里只有一个该类的实例，减少内存消耗和频繁创建和销毁的消耗；2）避免对资源的
 * 多重占用。
 * <p/>
 * 缺点：没有接口，不能继承，与单一职责原则冲突：一个类应该只关注内部逻辑，不关心外面如何
 * 实例化当前类。
 *
 * @author zhangmin.name
 */
package name.zhangmin.designpattern.singleton;